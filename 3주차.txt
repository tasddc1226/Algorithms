
N! ????? ???????.
???? ????? ??????????.

def f(n)
if n=0 return 1
else return f(n-1) * n

?? ???? big-O?? O(N)???. ???? ????? N??? ???????.

> ???? ???
* ???? : ??? n?? ???????????? ????? ?ò÷ ???? ???? x?? ??¡Æ??

* idea
- x?? ?ò÷?? ?????? (A[mid])?? ?????? ??????? ??????.
- x?? A[mid]???? ?????? ?ò÷?? ???? ????? ???? ??????? x?? ??¢¥?.
- x?? A[mid]???? ??? ?ò÷?? ?????? ????? ???? ??????? x?? ??¢¥?.

????????? ???????? ????????? ?ò÷???? ???????.
  0   1   2   3   4   5   6   7   8   9   10  11  12
[ 10, 12, 13, 14, 18, 20, 25, 27, 30, 35, 40, 45, 47 ]

??? 1 : x(18)?? ?ò÷?? ??? ??? A[6] = 25?? ?????.
        x < 25???? x?? ?ò÷?? ???? ????? ??¢¥?.

[ 10, 12, 13, 14, 18, 20 ]

??? 2 : x(18)?? ?? ?ò÷?? ??? ??? A[2] = 13?? ?????.
        x > 13???? x?? ??? ?ò÷?? ?????? ????? ??¢¥?.

[ 14, 18, 20 ]

??? 3 : x(18)?? ?? ?ò÷?? ??? ??? A[4] = 18?? ?????.
        x = 18 ???? x?? ????.

* ???????
// ?ò÷ A[fitst .. last] ???? x?? ????? ??¢¥?.
// input : ?ò÷ A[first .. last]?? ??? ?? x
// output : ?ò÷ A ???????? x?? ???(x?? A??? ????? -1)

algorithm BinarySearch (A[], first, last, x)
if (first > last) return -1
else { mid = first + last / 2
    if (x = A[mid]) return mid      // ??? ???
    else if (x < A[mid])            // ???? ????? x?? ??¢¥?.
        return BinarySearch(A, first, mid - 1, x)
    else   // ???? ????? x?? ??¢¥?.
        return BinarySearch(A, mid + 1, last, x)    
}

??. ???? ??? : location = BinarySearch(A, 0, n-1, x)